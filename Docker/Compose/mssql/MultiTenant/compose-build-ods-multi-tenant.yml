# SPDX-License-Identifier: Apache-2.0
# Licensed to the Ed-Fi Alliance under one or more agreements.
# The Ed-Fi Alliance licenses this file to you under the Apache License, Version 2.0.
# See the LICENSE and NOTICES files in the project root for more information.

services:
  db-ods-tenant1:
    build:
      context: ../../../Settings/DB-Ods/mssql/
      dockerfile: Dockerfile
      args:
        ODS_VERSION: ${MSSQL_ODS_MINIMAL_VERSION:-7.1.776}
        TPDM_VERSION: ${MSSQL_TPDM_MINIMAL_VERSION:-7.1.609}
        STANDARD_VERSION: ${STANDARD_VERSION:-5.0.0}
        EXTENSION_VERSION: ${EXTENSION_VERSION:-1.1.0}
    environment:
      ACCEPT_EULA: "Y"
      SQLSERVER_USER: ${SQLSERVER_USER:-edfi}
      SQLSERVER_PASSWORD: ${SQLSERVER_PASSWORD:-P@55w0rd}
      TPDM_ENABLED: ${TPDM_ENABLED:-true}
      MSSQL_PID: ${MSSQL_PID:-Express}
    ports:
      - 1435:1433
    volumes:
      - vol-db-ods-tenant1:/var/opt/mssql/data
      - vol-db-ods-tenant1:/var/opt/mssql/log
    restart: always
    container_name: ed-fi-db-ods-tenant1
    hostname: ed-fi-db-ods-tenant1
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -U ${SQLSERVER_USER:-edfi} -P "${SQLSERVER_PASSWORD:-P@55w0rd}" -C -Q "SELECT 1"
      start_period: "60s"
      retries: 3

  db-ods-tenant2:
    build:
      context: ../../../Settings/DB-Ods/mssql/
      dockerfile: Dockerfile
      args:
        ODS_VERSION: ${MSSQL_ODS_MINIMAL_VERSION:-7.1.776}
        TPDM_VERSION: ${MSSQL_TPDM_MINIMAL_VERSION:-7.1.609}
        STANDARD_VERSION: ${STANDARD_VERSION:-5.0.0}
        EXTENSION_VERSION: ${EXTENSION_VERSION:-1.1.0}
    environment:
      ACCEPT_EULA: "Y"
      SQLSERVER_USER: ${SQLSERVER_USER:-edfi}
      SQLSERVER_PASSWORD: ${SQLSERVER_PASSWORD:-P@55w0rd}
      TPDM_ENABLED: ${TPDM_ENABLED:-true}
      MSSQL_PID: ${MSSQL_PID:-Express}
    ports:
      - 1436:1433
    volumes:
      - vol-db-ods-tenant2:/var/opt/mssql/data
      - vol-db-ods-tenant2:/var/opt/mssql/log
    restart: always
    container_name: ed-fi-db-ods-tenant2
    hostname: ed-fi-db-ods-tenant2
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -U ${SQLSERVER_USER:-edfi} -P "${SQLSERVER_PASSWORD:-P@55w0rd}" -C -Q "SELECT 1"
      start_period: "60s"
      retries: 3

  api:
    image: edfialliance/ods-api-web-api:${TAG}-mssql
    environment:
      PATH_BASE: "${ODS_VIRTUAL_NAME:-api}"
      SQLSERVER_ADMIN_DATASOURCE: "${SQLSERVER_ADMIN_DATASOURCE:-host.docker.internal}"
      SQLSERVER_USER: "${SQLSERVER_USER:-edfi}"
      SQLSERVER_PASSWORD: "${SQLSERVER_PASSWORD:-P@55w0rd}"
      SQLSERVER_TENANT1_PORT: 1433
      SQLSERVER_TENANT2_PORT: 1433
      TPDM_ENABLED: "${TPDM_ENABLED:-true}"
      ODS_WAIT_HOSTS: "db-admin-tenant1 db-admin-tenant2"
      API_HEALTHCHECK_TEST: ${API_HEALTHCHECK_TEST?Please consult env.example to set the API healthcheck test}
      ODS_CONNECTION_STRING_ENCRYPTION_KEY: "${ODS_CONNECTION_STRING_ENCRYPTION_KEY}"
      ENCRYPT_CONNECTION: "${ENCRYPT_CONNECTION:-false}"
      ASPNETCORE_ENVIRONMENT: "docker"
    volumes:
      - ${LOGS_FOLDER}:/app/logs
      - ./../../../Compose/mssql/MultiTenant/appsettings.dockertemplate.json:/app/appsettings.dockertemplate.json
    entrypoint: ["/bin/sh"]
    command: ["-c","envsubst < /app/appsettings.dockertemplate.json > /app/appsettings.docker.json && /app/run.sh"]
    depends_on:
      - db-ods-tenant1
      - db-ods-tenant2
      - db-admin-tenant1
      - db-admin-tenant2
    restart: always
    hostname: api
    container_name: ed-fi-ods-api
    healthcheck:
      test: $$API_HEALTHCHECK_TEST
      start_period: "60s"
      retries: 3

volumes:
  vol-db-ods-tenant1:
    driver: local
    name: vol-nuget-db-ods-tenant1-local
  vol-db-ods-tenant2:
    driver: local
    name: vol-nuget-db-ods-tenant2-local